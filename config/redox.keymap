/*
 * Copyright (c) 2021 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>

/ {

    behaviors {
        hleft: h_left {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp H>, <&kp LEFT>;
            mods = <(MOD_RCTL|MOD_LCTL)>;
        };
        jdown: j_down {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp J>, <&kp DOWN>;
            mods = <(MOD_RCTL|MOD_LCTL)>;
        };
        kup: k_up {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp K>, <&kp UP>;
            mods = <(MOD_RCTL|MOD_LCTL)>;
        };
        lright: l_right {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp L>, <&kp RIGHT>;
            mods = <(MOD_RCTL|MOD_LCTL)>;
        };
    };

    keymap {
        compatible =  "zmk,keymap" ;

        default_layer {
// --------------------------------------------------------------------------------------------------------------------------------
// | ESC   |  1  |  2  |   3   |  4  |  5  |                   ---                |  6    |  7    |  8    |  9   | 0  |    BSPC   |
// | TAB   |  Q  |  W  |   E   |  R  |  T  |   (   |           ---        |  )    |  Y    |  U    |  I    |  O   | P  |     -     |
// | CTRL  |  A  |  S  |   D   |  F  |  G  |   [   |           ---        |  ]    |  H    |  J    |  K    |  L   | ;  |     '     |
// | SHIFT |  Z  |  X  |   C   |  V  |  B  | PG_UP | PG_DOWN | --- | HOME | END   |  N    |  M    |  ,    |  .   | /  | SHFT(RET) |
// | CRTL  | ALT | GUI | LOWER |    GUI    | LOWER | SPACE   | --- | DEL  | SPACE |     RAISE     | LEFT  | DOWN | UP |   RIGHT   |
            bindings = <
   &lt 2 GRAVE   &kp N1   &kp N2    &kp N3   &kp N4    &kp N5                                                                     &kp N6    &kp N7   &kp N8    &kp N9   &kp N0     &lt 2 BSLH
   &lt 1 TAB     &kp Q    &kp W     &kp E    &kp R     &kp T     &mo 1                                           &mo 1            &kp Y     &kp U    &kp I     &kp O    &kp P      &lt 1 EQUAL
   &mt LCTRL ESC &kp A    &kp S     &kp D    &kp F     &kp G     &kp LBKT                                        &kp RBKT         &hleft    &jdown   &kup      &lright  &kp SEMI   &mt RCTL SINGLE_QUOTE
   &mt LSHFT RET &kp Z    &kp X     &kp C    &kp V     &kp B     &kp PG_UP &kp PG_DN            &kp BSLH         &kp BSPC         &kp N     &kp M    &kp COMMA &kp DOT  &kp FSLH   &kp MINUS
   &sl 1         &kp LEFT &kp RIGHT &kp LALT    &kp LCMD         &kp SPACE &kp LSHIFT           &mt RSHIFT RET   &kp SPACE           &kp RCMD        &kp RALT  &kp DOWN &kp UP     &kp RET
            >;

        };

        lower_layer {
// --------------------------------------------------------------------------------------------------------------------------
// | ESC   |  1  |  2  |   3   |   4   |  5  |                   ---              |  6  |  7  |   8  |  9   |  0  |  DEL  |
// | ESC   |  1  |  2  |   3   |   4   |  5  |   (   |           ---        |  )  |  6  |  7  |   8  |  9   |  0  |  DEL  |
// | CTRL  |  -  |  =  |   [   |   ]   |  \  |   [   |           ---        |  ]  |  *  |  4  |   5  |  6   |  +  |   -   |
// | SHIFT | ESC | GUI | COPY  | PASTE |     | PG_UP | PG_DOWN | --- | HOME | END |  \  |  1  |   2  |  3   | RET |  RET  |
// | CRTL  | ALT | GUI | LOWER |     GUI     | LOWER | SPACE   | --- | DEL  |  0  |    RAISE  | LEFT | DOWN | UP  | RIGHT |
            bindings = <
   &trans  &kp F1      &kp F2      &kp F3            &kp F4             &kp F5                                                   &kp F6        &kp F7            &kp F8             &kp F9    &kp F10      &kp F13
   &trans  &kp EXCL    &kp AT      &kp LEFT_BRACE    &kp RIGHT_BRACE    &kp PIPE    &kp F11                          &kp F12     &kp LBKT      &kp LEFT_BRACE    &kp RIGHT_BRACE    &kp RBKT  &kp MINUS    &kp F14
   &trans  &kp HASH    &kp DOLLAR  &kp LBKT          &kp RBKT           &kp GRAVE   &trans                           &trans      &kp LEFT      &kp DOWN          &kp UP             &kp RIGHT &kp PLUS     &kp F15
   &trans  &kp PRCNT   &kp CARET   &kp LPAR          &kp RPAR           &kp TILDE   &kp HOME &kp END          &trans &kp DELETE  &trans        &kp LPAR          &kp RPAR           &kp N3    &kp RET      &kp F16
   &sl 2   &trans      &trans      &trans                    &trans                 &trans   &trans           &trans &kp RET         &trans                      &kp N0             &kp DOT   &kp RET      &trans
            >;
        };

        raise_layer {
// ----------------------------------------------------------------------------------------------------------------------------
// | ESC   |  1  |  2  |   3   |  4  |  5  |                   ---                |  6   |  7   |  8   |  9   |  0    |  DEL  |
// | ESC   |  !  |  @  |   #   |  $  |  %  |   (   |           ---        |  )    |  ^   |  &   |  *   |  (   |  )    |  DEL  |
// | CTRL  |  _  |  +  |   {   |  }  | "|" |   [   |           ---        |  ]    | HOME | PGUP | PRSC | UP   |  `    |   ~   |
// | SHIFT | ESC | GUI |   (   |  )  |     | PG_UP | PG_DOWN | --- | HOME | END   | END  | PGDN | LEFT | DOWN | RIGHT |  RET  |
// | CRTL  | ALT | GUI | LOWER |    GUI    | LOWER | SPACE   | --- | DEL  | SPACE |    RAISE    | LEFT | DOWN | UP    | RIGHT |
            bindings = <
   &trans        &bt BT_SEL 0    &bt BT_SEL 1     &bt BT_SEL 2  &bt BT_SEL 3   &bt BT_SEL 4                                            &trans    &trans         &trans           &trans   &trans    &trans
   &kp CAPS      &bt BT_CLR      &out OUT_TOG     &trans        &trans         &kp PRCNT     &bootloader                    &sys_reset  &kp LBKT  &kp LEFT_BRACE &kp RIGHT_BRACE  &kp RBKT &kp LPAR  &kp RPAR  
   &trans        &kp UNDER       &kp PLUS         &kp LBRC      &kp RBRC       &kp PIPE      &trans                         &trans      &kp HOME  &kp PG_DN      &kp PG_UP        &kp END  &kp GRAVE &kp TILDE
   &kp C_VOL_UP  &kp C_VOL_DN    &kp C_PLAY_PAUSE &trans        &trans         &trans        &trans       &trans     &trans &trans      &kp END   &kp PG_DN      &kp LEFT         &kp DOWN &kp RIGHT &kp RET
   &kp C_MUTE    &trans          &kp C_STOP       &trans             &trans                  &trans       &trans     &trans &kp RET          &trans              &trans           &trans   &trans    &trans
            >;
        };
    };
};
